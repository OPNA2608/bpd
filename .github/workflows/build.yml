name: Test Build

on:
  push:
    branches: master
    tags: 'v*.*.*'
    paths-ignore:
      - '**.md'
      - '**.txt'
      - 'LICENSE'
      - '.gitignore'
  pull_request:
    branches: master
    paths-ignore:
      - '**.md'
      - '**.txt'
      - 'LICENSE'
      - '.gitignore'

defaults:
  run:
    shell: bash

env:
  BUILD_TYPE: Debug
  NIXPKGS_CHANNEL: nixos-23.05

jobs:
  build:
    strategy:
      matrix:
        config:
          # Native
          - { name: 'Linux (Native)', os: ubuntu-latest }
          - { name: 'macOS (Native)', os: macos-latest }

          # Cross
          - { name: 'Linux (Cross, aarch64)', os: ubuntu-latest, extraNixArgs: '--argstr crossSystem aarch64-linux' }
          - { name: 'Linux (Cross, x86)', os: ubuntu-latest, extraNixArgs: '--argstr crossSystem i686-linux' }
          - { name: 'Linux (Cross, ppc64le)', os: ubuntu-latest, extraNixArgs: '--argstr crossSystem powerpc64le-linux' }
      fail-fast: false

    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}

    steps:
      - name: Identify build type.
        id: identify-build
        run: |
          case ${GITHUB_REF} in
            refs/tags/* )
              TAG=${GITHUB_REF#refs/tags/}
              echo "Release ${TAG}"
              echo "build-tag=${TAG}" >> $GITHUB_OUTPUT
              echo "release=true" >> $GITHUB_OUTPUT
              echo "buildVersion=${TAG#v}" >> $GITHUB_OUTPUT # nixpkgs
              ;;
            refs/pull/*)
              PR=$(echo ${GITHUB_REF} | cut -d/ -f3)
              echo "Test PR #${PR}"
              echo "build-tag=pr-${PR}" >> $GITHUB_OUTPUT
              echo "release=false" >> $GITHUB_OUTPUT
              echo "buildVersion=pr-${PR}-${GITHUB_SHA}" >> $GITHUB_OUTPUT # nixpkgs
              ;;
            refs/heads/* )
              BRANCH=${GITHUB_REF#refs/heads/}
              echo "Test ${BRANCH}"
              echo "build-tag=${BRANCH}" >> $GITHUB_OUTPUT
              echo "release=false" >> $GITHUB_OUTPUT
              echo "buildVersion=${BRANCH}-${GITHUB_SHA}" >> $GITHUB_OUTPUT # nixpkgs
              ;;
            * )
              echo "Test (unknown)"
              echo "build-tag=unknown" >> $GITHUB_OUTPUT
              echo "release=false" >> $GITHUB_OUTPUT
              echo "buildVersion=unknown-${GITHUB_SHA}" >> $GITHUB_OUTPUT # nixpkgs
              ;;
          esac

      - name: Checking out repository.
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Installing Nix.
        uses: cachix/install-nix-action@v22
        with:
          nix_path: "nixpkgs=channel:${{ env.NIXPKGS_CHANNEL }}"
      - name: Show Nixpkgs version.
        run: nix-instantiate --eval -E '(import <nixpkgs> {}).lib.version'

      - name: Building.
        run: |
          nix-build -E 'with import <nixpkgs> { }; callPackage ./default.nix { }' ${{ matrix.config.extraNixArgs }}
